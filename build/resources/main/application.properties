#指定加载视图的地址
spring.mvc.view.prefix: /view/
#指定加载视图文件的后缀名
spring.mvc.view.suffix: .jsp
#指定启动的端口号
server.port=8080

#文件服务器地址,测试环境;
uploadFileService=39.105.110.71:8082
#服务端服务器地址;分割

serviceUrl=localhost:8082/esop;localhost:8082/esop;
#上传文件
#spring.http.encoding.enabled: false
spring.http.multipart.max-file-size=10240KB
spring.http.multipart.max-request-size=10240KB

#mysql数据库连接
#hikari.datasource.url=jdbc\:mysql\://39.105.65.139\:3306/omt?useUnicode\=true&characterEncoding\=utf8
#hikari.datasource.username=root
#hikari.datasource.password=Admin123*


hikari.datasource.url=jdbc\:mysql\://localhost\:3306/omt?useUnicode\=true&characterEncoding\=utf8
hikari.datasource.username=root
hikari.datasource.password=root

spring.thymeleaf.cache=false
spring.tyhmeleaf.prefix=

#可以针对具体的类指定log日志打印等级
logging.level.com.omt.common.aop=INFO
logging.level.com.omt.systemManagement=INFO
#程序调试使用，上线程序此处应改为ERROR
logging.level.org.springframework.web=error
#程序调试使用，上线程序此处应改为ERROR
logging.level.org.apache.ibatis = INFO
logging.level.org.mybatis.spring.SqlSessionTemplate = INFO
logging.level.org.apache.ibatis.session = INFO
logging.level.com.omt.common.dataBase.SqlE=TRACE
log4j.logger.com.omt.common.dataBase.SqlE=TRACE
# Global logging configuration
log4j.rootLogger=INFO
# MyBatis logging configuration...
log4j.logger.org.mybatis=INFO

# hikariCP
#oracle驱动
#hikaricp.datasource.dataSourceClassName=oracle.jdbc.pool.OracleDataSource

#mysql驱动
hikaricp.datasource.dataSourceClassName=com.mysql.jdbc.jdbc2.optional.MysqlDataSource
#hikaricp.datasource.dataSourceClassName=org.mariadb.jdbc.MySQLDataSource
hikaricp.datasource.maximumPoolSize=10

#等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
hikaricp.datasource.connectionTimeout=60000

#一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟
hikaricp.datasource.maxLifetime=900000

#一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
hikaricp.datasource.idleTimeout=600000

hikaricp.datasource.connectionTestQuery=SELECT 1 FROM DUAL



multipart.maxFileSize=100Mb

multipart.maxRequestSize=100Mb

#设置字符编码，不设置的话在上传文件后提交的信息会乱码
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding = UTF-8
